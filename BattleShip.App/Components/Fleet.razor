@inject GameState GameState  // Injecte le singleton GameState

<div class="fleet">
    
    @if(GameState.fleetJ1 != null)
    {
        <p>Opponent fleet</p>
        @foreach (var boat in GameState.fleetJ2.Boats)
        {
            <p class="@(boat.IsAlive ? "alive" : "sunk")">
                @boat.Symbol - @boat.Size - @(boat.IsAlive ? "Vivant" : "Coulé")
            </p>
        }
        <br>
        <p>Our fleet</p>
        @foreach (var boat in GameState.fleetJ1.Boats)
        {
            <p class="@(boat.IsAlive ? "alive" : "sunk")">
                @boat.Symbol - @boat.Size - @(boat.IsAlive ? "Vivant" : "Coulé")
            </p>
        }
    }
</div>

@code {
    protected override void OnInitialized()
    {
        // Abonne le composant aux changements du GameState
        GameState.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        // Désabonne lorsque le composant est détruit pour éviter les fuites de mémoire
        GameState.OnChange -= StateHasChanged;
    }
}
