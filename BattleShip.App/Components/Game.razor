@using BattleShip.Models

@inject GameState GameState  // Injecte le singleton GameState
@inject HttpClient Http      // Injecte le client HTTP pour appeler l'API
@inject IJSRuntime JS


<div class="grids">

    @* Grid de l'adversaire *@
    <div class="oponent-grid">
        <BattleShip.App.Components.GridView title="Opponent Grid">

        </BattleShip.App.Components.GridView>
    </div>

    @* notre grille *@
    <div class="our-grid">
        <BattleShip.App.Components.GridView title="Your grid">

        </BattleShip.App.Components.GridView>
    </div>

</div>


<!-- Bouton pour démarrer le jeu -->
<button @onclick="StartGame">Démarrer un nouveau jeu</button>

@code {
    private async Task StartGame()
    {
        var response = await Http.GetAsync("generateGrid");
        if (response.IsSuccessStatusCode)
        {
            var json = await response.Content.ReadAsStringAsync();
            Console.WriteLine("Réponse JSON : " + json);
        }
        else
        {
            Console.WriteLine("Erreur lors de l'appel API : " + response.StatusCode);
        }
        
    }
}
