@using BattleShip.Models

@inject GameState GameState  // Injecte le singleton GameState
@inject HttpClient Http      // Injecte le client HTTP pour appeler l'API
@inject IJSRuntime JS


<div class="grids">

    @* Grid de l'adversaire *@
    <div class="oponent-grid">
        <div class="sub-title">
			<h3>Opponent Grid</h3>
		</div>
		<div class="grid-container">
			@for (int row = 0; row < 10; row++)
			{
				var currentRow = row;
				<div class="grid-row pos-{row}">
					@for (int col = 0; col < 10; col++)
					{
						var currentCol = col;
						<div class="grid-item pos-{row}-{col} pos-{col}">
							<div class="grid-item pos-{row}-{col} pos-{col}" @onclick="() => Shoot(currentRow, currentCol)">
								@if (GameState.MaskedGridJ2 != null)
								{
									@if (GameState.MaskedGridJ2[row][col] == true)
									{
										<img src="img/hit.png" alt="Touché" class="img-target-grid" />
									}
									else if (GameState.MaskedGridJ2[row][col] == false)
									{
										<img src="img/miss.png" alt="Raté" class="img-target-grid" />
									}
								}
							</div>
						</div>
					}
				</div>
			}
		</div>
    </div>



    @* Notre grille *@
    <div class="our-grid">
        <div class="sub-title">
			<h3>Our Grid</h3>
		</div>
		<div class="grid-container">
			@for (int row = 0; row < 10; row++)
			{
				
				<div class="grid-row pos-{row}">
					@for (int col = 0; col < 10; col++)
					{
						
						<div class="grid-item pos-{row}-{col} pos-{col}">
							@if (GameState.GridJ1 != null)
							{
								@if (GameState.GridJ1[row][col] != '\0')
								{
									<span>@GameState.GridJ1[row][col]</span> <!-- Lettre du bateau -->
								}
								else
								{
									<span>-</span> <!-- Case vide -->
								}
							}
							else {
								<span>a</span>
							}
							
						</div>
					}
				</div>
			}
		</div>
    </div>

</div>


@code {
   
	private void Shoot(int row, int col)
    {
		// TODO Faire l'appel à l'API
        Console.WriteLine($"click shoot, row : row, {row} col : {col}");
    }
}
