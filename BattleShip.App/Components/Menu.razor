@inject GameState GameState

<div class="input-name">
	<input @oninput="(e) => Name = e.Value.ToString()" placeholder="Entrez votre nom" class="form-control" />
</div>

<div class="welcome-text">
	<span> Bienvenue </span>
	<span>- @Name -</span>
</div>

@* Selection des niveaux *@
<div class="selection-level">

	<div class="sub-selection">
		<div class="title-selection">
			<p>PvE</p>
		</div>
		<div class="btn-selection">
			<button class="btn btn-outline-info" @onclick="() => OnButtonClicked(level0)">Level 0 (8x8)</button>
			<button class="btn btn-outline-info" @onclick="() => OnButtonClicked(level1)">Level 1 (8x8)</button>
			<button class="btn btn-outline-info" @onclick="() => OnButtonClicked(level2)">Level 2 (10x10)</button>
			<button class="btn btn-outline-info" @onclick="() => OnButtonClicked(level3)">Level 3 (10x10)</button>
			<button class="btn btn-outline-info" @onclick="() => OnButtonClicked(level4)">Level 4 (12x12)</button>
		</div>
	</div>

	<div class="sub-selection">
		<div class="title-selection">
			<p>PvP</p>
		</div>
		<div class="btn-selection">
			<button class="btn btn-outline-info">Petite Grille (8x8)</button>
			<button class="btn btn-outline-info">Moyenne Grille (10x10)</button>
			<button class="btn btn-outline-info">Grosse Grille (12x12)</button>
		</div>
	</div>
</div>



@code {
	private string Name { get; set; } = string.Empty;
	private string level0 = "10";
	private string level1 = "11";
	private string level2 = "12";
	private string level3 = "13";
	private string level4 = "14";

    [Parameter]
    public EventCallback<(string, string)> OnCallParentMethod { get; set; }

    private async Task OnButtonClicked(string lvl)
    {
		var parameters = (lvl, Name);
		Console.WriteLine(Name);
        if (OnCallParentMethod.HasDelegate & Name != null & Name != "")
        {
            await OnCallParentMethod.InvokeAsync(parameters);
        }
    }
}