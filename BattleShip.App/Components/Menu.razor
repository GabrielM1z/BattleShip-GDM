@* Selection des niveaux *@
<div class="selection-level">

	<div class="sub-selection">
		<div class="title-selection">
			<p>PvE</p>
		</div>
		<div class="btn-selection">
			<button class="btn btn-outline-info" @onclick="() => OnButtonClicked( true, 1)">Level 1 (8x8)</button>
			<button class="btn btn-outline-info" @onclick="() => OnButtonClicked( true, 2)">Level 2 (8x8)</button>
			<button class="btn btn-outline-info" @onclick="() => OnButtonClicked( true, 3)">Level 3 (10x10)</button>
			<button class="btn btn-outline-info" @onclick="() => OnButtonClicked( true, 4)">Level 4 (10x10)</button>
		</div>
	</div>

	<div class="sub-selection">
		<div class="title-selection">
			<p>PvP</p>
		</div>
		<div class="btn-selection">
			<button class="btn btn-outline-info">Petite Grille (8x8)</button>
			<button class="btn btn-outline-info">Moyenne Grille (10x10)</button>
			<button class="btn btn-outline-info">Grosse Grille (12x12)</button>
		</div>
	</div>
</div>



@code {
    [Parameter]
    public EventCallback<(bool, int)> OnCallParentMethod { get; set; }

    private async Task OnButtonClicked(bool pve, int level)
    {
        if (OnCallParentMethod.HasDelegate)
        {
            await OnCallParentMethod.InvokeAsync((pve, level)); // Envoie un tuple avec deux arguments
        }
    }
}